import Head from "next/head";
import { useRouter } from "next/router";
import { useState, useEffect } from "react";

import ProfilePage from "../../components/Profiles/ProfilePage";

export default function Profile(props) {
  
  const [ pageInfo, setPageInfo ] = useState({});
  const [ passedData, setPassedData ] = useState({});
  const router = useRouter();

  useEffect(() => {
    setPageInfo(router.query)
    if (router.query) {
      getDataFromServer(router.query);
    }
  }, [router.query]);


  async function getDataFromServer(data) {
    const out = {
      "ID": data.profile,
    }

    let response = null;
    try {
        response = await fetch(`http://localhost:8080/${data.type}/get-by-filter`, {
        method: "POST",
        headers: {
          "Content-Type": "application/json", 
        },
        body: JSON.stringify(out)
      });
      response = await response.json();
    }catch(e) {
      console.log(e);
    }

    let incoming = null;
    if (response) {
      incoming = response[data.type][0];
    }else return;

    let comments = null;
    try { 
      comments = await fetch(`http://localhost:8080/comment/getall`);
      comments = await comments.json();
    }catch(e) {
      console.log(e);
    }

    let incomingComments = null;
    if (comments) {
      incomingComments = comments["comments"]; // this is a list of comment objects
    }else return;



    let events = null;
    let eventSearch = {
      "ID": data.profile,
      "userType": data.type 
    }
    try {
      events = await fetch("http://localhost:8080/event/get-event-by-user", {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify(eventSearch)
      });
      events = await events.json();
    }catch(e) {
      console.log(e);
    }

    let outEvents = [];

    if (events) {
      outEvents = events["event"];
    }
    let rows = [];
    for (let event of outEvents) {
      let producer = null;
      let farmInfo = {
        "ID": event["farmId"],
        "userType": "dummy"
      }
      try {
        producer = await fetch("http://localhost:8080/producer/get-by-farm", {
          method: "POST",
          headers: {
            "Content-Type": "application/json"
          },
          body: JSON.stringify(farmInfo)
        });
        producer = await producer.json();
        console.log(producer);
      }catch(e) {
        console.log(e);
      }

      console.log(producer);

      rows.push({
        id: event["ID"],
        col1: event["name"],
        col2: event["description"],
        col3: event["date"],
        col4: `${producer["firstName"]} ${producer["lastName"]}`,
        col5: producer["username"],
      })
    }
    
    let outComments = []
    
    for (let comment of incomingComments) {
      if (comment[data.type] && comment[data.type].id == out["ID"]) {
        outComments.push(comment);
      }
    }
  
    setPassedData({
      ID: incoming.ID,
      username: incoming.username,
      postalCode: incoming.postalCode,
      address: incoming.address,
      city: incoming.city,
      firstName: incoming.firstName,
      lastName: incoming.lastName,
      email: incoming.email,
      personType: data.type,
      name: incoming.name,
      comments: outComments,
      rows: rows
    });
    

  }



    return (
      <div key={pageInfo.pid}>
        <Head>
          <title>Title</title>
          <meta name="description" content="Generated by create next app" />
          <meta name="viewport" content="width=device-width, initial-scale=1" />
          <link rel="icon" href="/favicon.ico" />
        </Head>
  

        <main>
          <ProfilePage info={passedData} /> 
        </main>
      </div>
    );
  }
  